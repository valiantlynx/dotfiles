---
- name: "Arduino Desktop | Detect any installed versions"
  ansible.builtin.command:
    cmd: which arduino
  changed_when: false
  failed_when: false
  register: arduino_check

- name: "Arduino Desktop | Register any installed versions"
  ansible.builtin.set_fact:
    arduino_installed: "{{ arduino_check.stdout|default('') }}"

- name: "Arduino Desktop | Installed version"
  ansible.builtin.debug:
    var: arduino_installed

- name: "Arduino Desktop | Install"
  block:
    - name: "Arduino Desktop | Install Dependencies"
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - ca-certificates
        - wget
        - libfuse2
        - fuse
      become: true

    - name: "Arduino Desktop | Ensure clean location to download AppImage"
      ansible.builtin.file:
        path: "{{ arduino_install_dir|default('/opt/arduino') }}/arduino-ide"
        state: absent
      become: true

    - name: "Arduino Desktop | Create installation directory"
      ansible.builtin.file:
        path: "{{ arduino_install_dir|default('/opt/arduino') }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        mode: '0755'
      become: true

    - name: "Arduino Desktop | Download Arduino IDE 2 AppImage"
      ansible.builtin.get_url:
        url: "https://downloads.arduino.cc/arduino-ide/arduino-ide_{{ arduino_version|default('2.2.1') }}_Linux_64bit.AppImage"
        dest: "{{ arduino_install_dir|default('/opt/arduino') }}/arduino-ide"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0755'
      become: true

    - name: "Arduino Desktop | Set AppImage as executable"
      ansible.builtin.file:
        path: "{{ arduino_install_dir|default('/opt/arduino') }}/arduino-ide"
        mode: '0755'
      become: true

    - name: "Arduino Desktop | Extract AppImage icon"
      ansible.builtin.shell:
        cmd: "{{ arduino_install_dir|default('/opt/arduino') }}/arduino-ide --appimage-extract usr/share/icons/hicolor/256x256/apps/arduino-ide.png"
        chdir: "{{ arduino_install_dir|default('/opt/arduino') }}"
        creates: "{{ arduino_install_dir|default('/opt/arduino') }}/squashfs-root/usr/share/icons/hicolor/256x256/apps/arduino-ide.png"
      become: false
      when: arduino_create_desktop_shortcut|default(true)

    - name: "Arduino Desktop | Create icons directory"
      ansible.builtin.file:
        path: "/home/{{ ansible_user_id }}/.local/share/icons"
        state: directory
        owner: "{{ ansible_user_id }}"
        mode: '0755'
      when: arduino_create_desktop_shortcut|default(true)

    - name: "Arduino Desktop | Copy extracted icon"
      ansible.builtin.copy:
        remote_src: true
        src: "{{ arduino_install_dir|default('/opt/arduino') }}/squashfs-root/usr/share/icons/hicolor/256x256/apps/arduino-ide.png"
        dest: "/home/{{ ansible_user_id }}/.local/share/icons/arduino-ide.png"
        owner: "{{ ansible_user_id }}"
        mode: '0644'
      when: arduino_create_desktop_shortcut|default(true)
      ignore_errors: true

    - name: "Arduino Desktop | Add udev rules for Arduino devices"
      ansible.builtin.copy:
        dest: /etc/udev/rules.d/99-arduino.rules
        content: 'SUBSYSTEMS=="usb", ATTRS{idVendor}=="2341", GROUP="plugdev", MODE="0666"'
        owner: root
        group: root
        mode: '0644'
      become: true
      notify:
        - Reload udev rules

    - name: "Arduino Desktop | Create desktop shortcut"
      ansible.builtin.template:
        src: arduino.desktop.j2
        dest: "/home/{{ ansible_user_id }}/.local/share/applications/arduino.desktop"
        owner: "{{ ansible_user_id }}"
        mode: '0644'
      when: arduino_create_desktop_shortcut|default(true)

    - name: "Arduino Desktop | Verify Arduino IDE can start"
      ansible.builtin.command:
        cmd: "{{ arduino_install_dir|default('/opt/arduino') }}/arduino-ide --version"
      changed_when: false
      register: arduino_test
      ignore_errors: true

    - name: "Arduino Desktop | Display Arduino IDE version"
      ansible.builtin.debug:
        var: arduino_test.stdout
      when: arduino_test.rc == 0

    - name: "Arduino Desktop | Display error if Arduino IDE failed to start"
      ansible.builtin.debug:
        msg: "WARNING: Arduino IDE failed to start. Error: {{ arduino_test.stderr }}"
      when: arduino_test.rc != 0

  when: arduino_installed | length < 1
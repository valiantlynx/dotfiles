---
- name: "SSH | Copy SSH keys"
  copy:
    dest: "{{ ansible_user_dir | default(ansible_env.HOME) }}/.ssh/{{ ssh_key_item.key }}"
    content: "{{ ssh_key_item.value }}"
    mode: 0600
  no_log: true
  loop_control:
    loop_var: ssh_key_item
  with_items: "{{ ssh_key | default({}) | dict2items }}"

# - name: Copy config
#   ansible.builtin.template:
#     dest: "{{ ansible_user_dir | default(ansible_env.HOME) }}/.ssh/config"
#     src: "config.j2"

- name: "SSH | Ensure SSH agent is running"
  shell: |
    if [ -z "$SSH_AUTH_SOCK" ] || ! kill -0 "$SSH_AGENT_PID" 2>/dev/null; then
        eval $(ssh-agent -s)
    fi
  environment:
    SSH_AUTH_SOCK: "{{ ansible_env.SSH_AUTH_SOCK | default('') }}"
    SSH_AGENT_PID: "{{ ansible_env.SSH_AGENT_PID | default('') }}"
  register: ssh_agent_result
  changed_when: false

- name: "SSH | Add SSH keys to agent"
  shell: |
    # Source the agent if it was just started
    if [ -n "{{ ssh_agent_result.stdout }}" ]; then
        eval "{{ ssh_agent_result.stdout }}"
    fi
    
    # Add keys to agent
    {% for key_item in ssh_key | default({}) | dict2items %}
    {% if key_item.key.endswith(('_rsa', '_ed25519', '_ecdsa')) and not key_item.key.endswith('.pub') %}
    ssh-add "{{ ansible_user_dir | default(ansible_env.HOME) }}/.ssh/{{ key_item.key }}" 2>/dev/null || true
    {% endif %}
    {% endfor %}
  environment:
    SSH_AUTH_SOCK: "{{ ansible_env.SSH_AUTH_SOCK | default('') }}"
    SSH_AGENT_PID: "{{ ansible_env.SSH_AGENT_PID | default('') }}"
  register: ssh_add_result
  changed_when: false
  no_log: true

- name: "SSH | Add SSH agent startup to shell configuration"
  blockinfile:
    path: "{{ ansible_user_dir | default(ansible_env.HOME) }}/.{{ item }}"
    block: |
      # SSH Agent Setup - Added by Ansible
      start_ssh_agent() {
          if [ -z "$SSH_AUTH_SOCK" ] || ! kill -0 "$SSH_AGENT_PID" 2>/dev/null; then
              eval $(ssh-agent -s) > /dev/null
              
              # Add SSH keys
              {% for key_item in ssh_key | default({}) | dict2items %}
              {% if key_item.key.endswith(('_rsa', '_ed25519', '_ecdsa')) and not key_item.key.endswith('.pub') %}
              ssh-add ~/.ssh/{{ key_item.key }} 2>/dev/null || true
              {% endif %}
              {% endfor %}
          fi
      }
      
      # Auto-start SSH agent
      start_ssh_agent
      
      # Aliases for SSH management
      alias ssh-restart="killall ssh-agent 2>/dev/null; start_ssh_agent"
      alias ssh-status="ssh-add -l 2>/dev/null || echo 'No SSH keys loaded'"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - SSH Agent"
    create: yes
  loop:
    - bashrc
    - zshrc
  ignore_errors: true

- name: "SSH | Test SSH connection to GitHub"
  shell: ssh -T git@github.com
  register: github_ssh_test
  failed_when: github_ssh_test.rc not in [0, 1]  # Exit code 1 is normal for GitHub SSH test
  changed_when: false

- name: "SSH | Display GitHub SSH test result"
  debug:
    msg: "GitHub SSH connection test: {{ github_ssh_test.stderr }}"
  when: github_ssh_test.stderr is defined

- name: Check if dotfiles directory exists
  stat:
    path: "{{ ansible_user_dir }}/.dotfiles"
  register: dotfiles_dir

- name: Change Git remote from HTTPS to SSH
  command: git remote set-url origin git@github.com:valiantlynx/dotfiles.git
  args:
    chdir: "{{ ansible_user_dir }}/.dotfiles"
  when: dotfiles_dir.stat.exists and dotfiles_dir.stat.isdir
